What is partially monotone layer?
=======================================

``pmlayer`` provides a set of partially monotone layers for PyTorch.

Suppose that we want to train a function :math:`f(x,y) = (x^2 + y^2)/2` by using a neural network.
This function is monotonically increasing with :math:`x` and :math:`y`.
We can learn this function by using a standard neural network, but the monotonicity is not guaranteed.

.. image:: square_2d.png

The partially monotone layers are designed to handle monotonicity constraints.
Therefore, the output of these layers is guaranteed as monotonically increasing with respect to :math:`x` and  :math:`y`.

The ``HLattice`` layer is the key layer of ``pmlayer``.  In this layer, a :math:`k \times k` grid is created, where :math:`k \geq 2` is a hyperparameter to specify the granularity of the grid.
Each grid point :math:`f(x',y')` is trained to learn the value of the function :math:`f(x',y')` and they are trained to satisfy the monotonicity constraints.

.. image:: square_grid.png
