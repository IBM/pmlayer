pmlayer.torch.layers.HLattice
==================================

Hierarchical lattice layer with partially monotone constraints for PyTorch.

.. code-block:: python

    class HLattice(
        num_input_dims,
        lattice_sizes,
        indices_increasing,
        neural_network=None)

This layer is a hierarchically structured lattice layer to handle partial monotonicity constraints.

.. note::
    Each value in the input tensor must be between 0 and 1.


Parameters
---------------------------------

=================== =============== ===================================================================================
Args                Type            Description
=================== =============== ===================================================================================
num_input_dims      int             The number of input features.
lattice_sizes       Tensor (long)   The sizes of monotonically increasing features.
indices_increasing  list of int     The list of indices of monotonically increasing features.
neural_network      neural network  Neural network.  Default: ``None``.
=================== =============== ===================================================================================


Tensor Shape
---------------------------------

==================== ==============================================================
I/O                  Shape
==================== ==============================================================
Input                (N, num_input_dims)
Output               (N, 1)
==================== ==============================================================

N usually represents the batch size.


Example
---------------------------------

The following code outputs ``(128,1)``.

.. code-block:: python

    sizes = torch.tensor([4,4], dtype=torch.long)
    l = HLattice(10, sizes, [2,3])
    x = torch.randn(128, 10)
    y = l(x)
    print(y.shape)
