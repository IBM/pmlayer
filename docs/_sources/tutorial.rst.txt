Tutorial for PyTorch
===============================

How to Use pmlayer.torch.layers.PiecewiseLinear
-----------------------------------------------------

We explain how to use ``pmlayer.torch.layers.PiecewiseLinear``.
This layer represents a piece-wise linear (PWL) function.

.. code-block:: python

    import torch
    import pmlayer.torch.layers.PiecewiseLinear

    boundaries = torch.linspace(0.0, 1.0, 4)
    model = PiecewiseLinear(boundaries, 2, indices_increasing=[0,1])

In this example, the endpoints of the PWL function is designated by ``boundaries``.
The size of input feature is 2, and both of them are designated as monotonic features by setting ``indices_increasing=[0,1]``.

.. code-block:: python

    data_x = torch.randn(batch_size, n_input)
    data_y = (torch.rand(size=(batch_size, 1)) < 0.5).float()

    loss_function = nn.MSELoss()
    optimizer = torch.optim.SGD(model.parameters(), lr=0.001)
    for epoch in range(5000):
        pred_y = model(data_x)
        loss = loss_function(pred_y, data_y)
        model.zero_grad()
        loss.backward()
        optimizer.step()



How to Use pmlayer.torch.layers.HLattice
-----------------------------------------------------

Tutorial for HLattice
